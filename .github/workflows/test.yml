name: test
on:
  push: # on any branch
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
        os: [windows-2019, ubuntu-18.04, macos-10.15]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m pip install poetry==1.1.11

      - name: Configure poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install

      - name: Run tests
        run: |
          poetry run python -m pytest --verbose --exitfirst
